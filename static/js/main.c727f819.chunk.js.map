{"version":3,"sources":["components/Modal/components/ModalOverlay.module.css","components/App.module.css","components/OrderList/components/OrderDetails/OrderDetails.module.css","reportWebVitals.ts","constants.tsx","services/AllIngridients/actions.ts","utils/coockie.ts","services/Auth/actions.ts","services/Websocket/socketMiddleware.ts","services/Auth/selectors.ts","hooks/hooks.ts","components/AppHeader/AppHeader.tsx","components/Modal/components/ModalOverlay.tsx","components/Modal/Modal.tsx","components/OrderDetails/OrderDetails.tsx","services/ContructorIngridients/actions.ts","components/BurgerConstructor/components/SelectIngredient.tsx","services/Order/actions.ts","components/BurgerConstructor/BurgerConstructor.tsx","services/IngredientDetails/actions.ts","components/BurgerIngredients/components/IngridientCard.tsx","services/AllIngridients/selectors.ts","components/BurgerIngredients/BurgerIngredients.tsx","services/IngredientDetails/selectors.ts","components/IngredientDetails/IngredientDetails.tsx","components/ProtectedRoute/ProtectedRoute.tsx","pages/login/login.tsx","pages/register/register.tsx","pages/forgot-password/forgot-password.tsx","pages/reset-password/reset-password.tsx","components/ProfileDetails/ProfileDetails.tsx","services/Websocket/actions.ts","components/OrderList/components/OrderInfo/Order.tsx","components/OrderList/OrderList.tsx","components/OrderList/components/OrderDetails/OrderDetails.tsx","pages/profile/profile.tsx","pages/error-page/error-page.tsx","components/OrdersStatistic/OrdersStatistic.tsx","pages/feed-page/feed-page.tsx","components/App.tsx","services/AllIngridients/reducers.ts","services/IngredientDetails/reducers.ts","services/Order/reducers.ts","services/ContructorIngridients/reducers.ts","services/Auth/reducers.ts","services/Websocket/reducer.ts","services/rootReducer.ts","services/Websocket/ws-types.ts","services/store.ts","index.tsx","components/OrdersStatistic/OrdersStatistic.module.css","components/BurgerConstructor/BurgerConstructor.module.css","components/AppHeader/AppHeader.module.css","components/OrderList/components/OrderInfo/Order.module.css","pages/profile/profile.module.css","components/BurgerIngredients/BurgerIngredients.module.css","components/OrderDetails/OrderDetails.module.css","components/IngredientDetails/IngredientDetails.module.css","components/BurgerIngredients/components/IngridientCard.module.css","components/ProfileDetails/ProfileDetails.module.css","components/Modal/Modal.module.css","pages/login/login.module.css","components/OrderList/OrderList.module.css","pages/error-page/error-page.module.css","pages/register/register.module.css","pages/forgot-password/forgot-password.module.css","pages/reset-password/reset-password.module.css","pages/feed-page/feed-page.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","API_ADDRESS","API_ORDER_ADDRESS","API_AUTH","LOAD_INGREDIENTS","LOAD_INGREDIENTS_PROCESS","LOAD_INGREDIENTS_ERROR","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","SET_USER_DATA","UPDATE_USER_DATA","UPDATE_USER_DATA_ERROR","REGISTER_ERROR","REGISTER_SENDING","LOGIN_USER","LOGIN_USER_ERROR","FORGOT_PASSWORD","FORGOT_PASSWORD_ERROR","RESET_PASSWORD","RESET_PASSWORD_ERROR","LOGOUT_ERROR","LOGOUT_SUCCESS","TOKEN_SUCCESS","TOKEN_ERROR","USER_SUCCESS","USER_ERROR","checkResponse","response","status","Error","json","wsUrl","wsActions","checkUser","dispatch","fetch","method","headers","token","data","console","log","type","payload","user","catch","error","message","body","JSON","stringify","accessToken","refreshToken","getUserName","store","getUserEmail","email","isLoginUser","loginUser","isEmailSent","emailSent","isPasswordReseted","passwordReseted","isResetPasswordInProgress","resetPasswordInProgress","useSelector","selectorHook","useDispatch","dispatchHook","AppHeader","isAuthUser","userName","profileActive","useRouteMatch","path","constructorActive","exact","feedActive","burgerType","profileIconType","className","appHeaderStyles","appHeader","mainMenu","to","headerLink","activeLink","loginMenu","ModalOverlay","clickOverlay","modalOverlayStyles","modalOverlay","onClick","modalRoot","getElementById","Modal","children","title","onClose","handleEsc","useCallback","e","keyCode","key","useEffect","addEventListener","removeEventListener","createPortal","id","modalStyles","modal","modalHeader","modalCloseButton","OrderDetails","orderId","state","orderDetailsStyles","orderDetails","orderNumber","image","success","text","ADD_BUNS","ADD_INGREDIENTS","REMOVE_BUNS","REMOVE_INGREDIENT","CLEAR_ALL_INGREDIENTS","CHANGE_INGREDIENTS","SelectIngredient","index","moveIng","price","image_mobile","uuid","selectedIngredients","ref","useRef","useDrop","accept","hover","item","monitor","current","hoverIndex","dragCard","find","el","dragIndex","indexOf","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","dropRef","useDrag","collect","isDragging","opacity","dragRef","burgerConstructorStyles","ingridient","style","thumbnail","handleClose","SET_ORDER_ID","REMOVE_ORDER_ID","getOrder","ids","ok","Promise","reject","setOrderId","order","number","err","alert","BurgerConstructor","location","useLocation","buns","useState","isModalOpen","setIsModalOpen","userLogin","redirect","setRedirect","isBunAdded","useMemo","drop","addBuns","uuidv4","addIngredients","dropTarget","totalPrice","reduce","total","fromIndex","toIndex","pathname","from","burgerConstructor","fixedPosition","isLocked","emptyConstructor","length","customScroll","map","orderFooter","orderResult","size","selectedIds","_id","bunId","allIdsForOrder","ingredients","handleClickOrderButton","SET_INGREDIENT_DETAILS","REMOVE_INGREDIENT_DETAILS","IngridientCard","selectMass","obj","hasOwnProperty","ingridientCardStyles","ingridientCard","counterOuter","counter","alt","src","getAllIngredients","BurgerIngredients","history","useHistory","productData","setCurrent","filter","sauces","mains","setTab","tab","element","scrollIntoView","behavior","inViewOptions","threshold","trackVisibility","delay","useInView","bunRef","inViewBun","mainRef","inViewMain","sauceRef","inViewSauce","handleClickIngredients","setIngredientDetails","push","burgerIngredientsStyles","burgerIngredients","active","cards","getIngredientDetails","ingredientDetails","IngredientDetails","useParams","product","image_large","calories","fat","kbzu","proteins","carbohydrates","content","ingredientDetailsStyles","ingredient","goBack","ProtectedRoute","rest","render","LoginPage","password","formValue","setFormValue","onChange","target","styles","loginForm","onSubmit","preventDefault","link","RegisterPage","registerForm","register","placeholder","ForgotPasswordPage","checkIsEmailSent","forgotPasswordForm","forgotPassword","ResetPasswordPage","checkIsPasswordReseted","resetPasswordForm","resetPassword","ProfileDetails","baseUser","profileDetailsForm","updateUserData","buttons","button","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","WS_SEND_MESSAGE","WS_CONNECTION_START_USER","Order","orderInfo","url","includes","orderIngs","acc","i","date","createdAt","toLocaleString","weekday","day","month","hour","minute","timeZoneName","card","info","images","zIndex","radius","blackout","OrdersList","ordersInfo","websocket","orders","orderList","dataOrders","setData","params","uniqueIngredientsObj","uniqueIngredients","Object","values","counts","num","container","box","scroll","list","ProfilePage","getIsLoginUser","isOrderDetailsPage","window","href","isOrderPage","onClickLogout","profileContainer","left","nav","activeStyle","color","description","right","ErrorPage","errorForm","OrdersStatistic","ready","inWork","ordersStatistic","done","work","totalToday","FeedPage","OrderList","App","ingredientsIsLoaded","ingredientsLoadedError","appStyles","app","DndProvider","backend","HTML5Backend","initialState","initialStateProfile","loginError","registerSending","registerError","updateUserDataError","errorMessage","wsConnected","rootReducer","combineReducers","action","splice","auth","WS_ACTIONS","wsInit","wsInitUser","wsSendMessage","onOpen","onError","onMessage","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","socket","next","split","WebSocket","onopen","event","onerror","onmessage","parsedData","parse","restParsedData","onclose","send","createStore","ReactDOM","StrictMode","basename"],"mappings":"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","file":"static/js/main.c727f819.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalOverlay\":\"ModalOverlay_modalOverlay__2yARY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1tA9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"OrderDetails_container__uTfPg\",\"text\":\"OrderDetails_text__oYAvV\",\"id\":\"OrderDetails_id__O340E\",\"price\":\"OrderDetails_price__7xri1\",\"box\":\"OrderDetails_box__3dZcU\",\"scroll\":\"OrderDetails_scroll__m0b-D\",\"list\":\"OrderDetails_list__mc7fU\",\"card\":\"OrderDetails_card__iz7OC\",\"image\":\"OrderDetails_image__HEvdU\",\"info\":\"OrderDetails_info__2dELY\",\"status\":\"OrderDetails_status__3nXg6\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const API_ADDRESS = 'https://norma.nomoreparties.space/api';\nexport const API_ORDER_ADDRESS = `${API_ADDRESS}/orders`;\nexport const API_AUTH = `${API_ADDRESS}/auth`;\nexport const FAKE_ORDER_ID = 12345;\nexport const WS_URL = 'wss://norma.nomoreparties.space/orders';\n","import { API_ADDRESS } from '../../constants';\nimport { AppDispatch, AppThunk, TIngridientData } from '../../utils/types';\nexport const STORE_NAME = 'ingredients';\n\nexport const LOAD_INGREDIENTS: 'LOAD_INGREDIENTS' = 'LOAD_INGREDIENTS';\nexport const LOAD_INGREDIENTS_PROCESS: 'LOAD_INGREDIENTS_PROCESS' = 'LOAD_INGREDIENTS_PROCESS';\nexport const LOAD_INGREDIENTS_ERROR: 'LOAD_INGREDIENTS_ERROR' = 'LOAD_INGREDIENTS_ERROR';\n\nexport interface ILoadIngredientsAction {\n    readonly type: typeof LOAD_INGREDIENTS;\n    readonly payload: Array<TIngridientData>;\n}\n\nexport interface ILoadIngredientsProcessAction {\n    readonly type: typeof LOAD_INGREDIENTS_PROCESS;\n}\n\nexport interface ILoadIngredientsErrorAction {\n    readonly type: typeof LOAD_INGREDIENTS_ERROR;\n}\n\nexport type TLoadIngredientsActions = \n    | ILoadIngredientsAction\n    | ILoadIngredientsErrorAction\n    | ILoadIngredientsErrorAction;\n\nexport const getProducts: AppThunk = () => (dispatch: AppDispatch) => {\n    fetch(`${API_ADDRESS}/ingredients`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.reject(response.status);\n        })\n        .then(data => {\n            dispatch({\n                type: LOAD_INGREDIENTS_PROCESS,\n            });\n            if (data && data.success) {\n                dispatch({\n                    type: LOAD_INGREDIENTS,\n                    data: data.data,\n                });\n            }\n        })\n        .catch((error) => {\n            console.log('error', error);\n            dispatch({\n                type: LOAD_INGREDIENTS_ERROR,\n            });\n        });\n}\n","export function getCookie(name: string): string | undefined {\n    const matches = document.cookie.match(\n      new RegExp('(?:^|; )' + name.replace(/([.$?*|{}()[]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\n    );\n    return matches ? decodeURIComponent(matches[1]) : undefined;\n  }\n  \n  export function setCookie(name: string, value: string, props?: any) {\n    props = props || {};\n    let exp = props.expires;\n    if (typeof exp == 'number' && exp) {\n      const d = new Date();\n      d.setTime(d.getTime() + exp * 1000);\n      exp = props.expires = d;\n    }\n    if (exp && exp.toUTCString) {\n      props.expires = exp.toUTCString();\n    }\n    value = encodeURIComponent(value);\n    let updatedCookie = name + '=' + value;\n    for (const propName in props) {\n      updatedCookie += '; ' + propName;\n      const propValue = props[propName];\n      if (propValue !== true) {\n        updatedCookie += '=' + propValue;\n      }\n    }\n    document.cookie = updatedCookie;\n  }\n  \n  export function deleteCookie(name: string) {\n    setCookie(name, '', { expires: -1 });\n  }\n","\nimport { setCookie, getCookie } from '../../utils/coockie';\nimport { API_AUTH, API_ADDRESS } from '../../constants';\nimport { AppDispatch, AppThunk, TErrorMassage, TLoginData, TUserData, TUserDataWithoutPass } from '../../utils/types';\nexport const STORE_NAME = 'auth';\n\nexport const SET_USER_DATA: 'SET_USER_DATA' = 'SET_USER_DATA';\nexport const UPDATE_USER_DATA: 'UPDATE_USER_DATA' = 'UPDATE_USER_DATA';\nexport const UPDATE_USER_DATA_ERROR: 'UPDATE_USER_DATA_ERROR' = 'UPDATE_USER_DATA_ERROR';\n\nexport const REGISTER_ERROR: 'REGISTER_ERROR' = 'REGISTER_ERROR';\nexport const REGISTER_SENDING: 'REGISTER_SENDING' = 'REGISTER_SENDING';\n\nexport const LOGIN_USER: 'LOGIN_USER' = 'LOGIN_USER';\nexport const LOGIN_USER_ERROR: 'LOGIN_USER_ERROR' = 'LOGIN_USER_ERROR';\n\nexport const FORGOT_PASSWORD: 'FORGOT_PASSWORD' = 'FORGOT_PASSWORD';\nexport const FORGOT_PASSWORD_ERROR: 'FORGOT_PASSWORD_ERROR' = 'FORGOT_PASSWORD_ERROR';\n\nexport const RESET_PASSWORD: 'RESET_PASSWORD' = 'RESET_PASSWORD';\nexport const RESET_PASSWORD_ERROR: 'RESET_PASSWORD_ERROR' = 'RESET_PASSWORD_ERROR';\n\nexport const LOGOUT_ERROR: 'LOGOUT_ERROR' = 'LOGOUT_ERROR';\nexport const LOGOUT_SUCCESS: 'LOGOUT_SUCCESS' = 'LOGOUT_SUCCESS';\n\nexport const TOKEN_SUCCESS: 'TOKEN_SUCCESS' = 'TOKEN_SUCCESS';\nexport const TOKEN_ERROR: 'TOKEN_ERROR' = 'TOKEN_ERROR';\n\nexport const USER_SUCCESS: 'USER_SUCCESS' = 'USER_SUCCESS';\nexport const USER_ERROR: 'USER_ERROR' = 'USER_ERROR';\n\nexport function checkResponse(response) {\n    if (response.status !== 200) {\n        throw new Error(response.status);\n    }\n    return response.json();\n}\n\nexport interface ISentRegisterAction {\n    readonly type: typeof REGISTER_SENDING;\n}\n\nexport interface ISetUserDataAction {\n    readonly type: typeof SET_USER_DATA;\n    readonly payload: TUserDataWithoutPass;\n}\n\nexport interface IUpdateUserDataAction {\n    readonly type: typeof UPDATE_USER_DATA;\n    readonly payload: TUserDataWithoutPass;\n}\n\nexport interface ILoginUserAction {\n    readonly type: typeof LOGIN_USER;\n    readonly payload: TUserDataWithoutPass;\n}\n\nexport interface ILogoutUserAction {\n    readonly type: typeof LOGOUT_SUCCESS;\n    readonly name: string;\n    readonly email: string;\n}\n\nexport interface IUserSuccessAction {\n    readonly type: typeof USER_SUCCESS;\n    readonly payload: TUserDataWithoutPass;\n}\n\nexport interface IResetPassAction {\n    readonly type: typeof RESET_PASSWORD;\n}\n\nexport interface ITokenSuccessAction {\n    readonly type: typeof TOKEN_SUCCESS;\n}\n\nexport interface IForgotPassAction {\n    readonly type: typeof FORGOT_PASSWORD;\n}\n\nexport interface IForgotPassErrorAction {\n    readonly type: typeof FORGOT_PASSWORD_ERROR;\n    readonly payload: TErrorMassage;\n}\n\nexport interface IResetPassErrorAction {\n    readonly type: typeof RESET_PASSWORD_ERROR;\n    readonly payload: TErrorMassage;\n}\n\nexport interface IUserErrorAction {\n    readonly type: typeof USER_ERROR;\n    readonly payload: TErrorMassage;\n}\n\nexport interface ITokenErrorAction {\n    readonly type: typeof TOKEN_ERROR;\n    readonly payload: TErrorMassage;\n}\n\nexport interface ILoginUserErrorAction {\n    readonly type: typeof LOGIN_USER_ERROR;\n    readonly payload: TErrorMassage;\n}\n\nexport interface ILogoutUserErrorAction {\n    readonly type: typeof LOGOUT_ERROR;\n    readonly payload: TErrorMassage;\n}\n\nexport interface IRegisterErrorAction {\n    readonly type: typeof REGISTER_ERROR;\n    readonly payload: TErrorMassage;\n}\n\nexport interface IUpdateUserDataErrorAction {\n    readonly type: typeof UPDATE_USER_DATA_ERROR;\n    readonly payload: TErrorMassage;\n}\n\nexport type TAuthActions =\n    | IUpdateUserDataErrorAction\n    | IRegisterErrorAction\n    | ILogoutUserErrorAction\n    | ILoginUserErrorAction\n    | ITokenErrorAction\n    | IUserErrorAction\n    | IResetPassErrorAction\n    | IForgotPassErrorAction\n    | IForgotPassAction\n    | ITokenSuccessAction\n    | IResetPassAction\n    | IUserSuccessAction\n    | ILogoutUserAction\n    | ILoginUserAction\n    | IUpdateUserDataAction\n    | ISetUserDataAction\n    | ISentRegisterAction;\n\n\nexport const register: AppThunk = ({ name, email, password }: TUserData) =>  (dispatch: AppDispatch) => { \n    fetch(`${API_AUTH}/register`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify({ name, email, password }),\n    })\n        .then(response => {\n            dispatch({\n                type: REGISTER_SENDING,\n            });\n            console.log(JSON.stringify({\"email\": email, \"password\": password, \"name\": name }))\n            return checkResponse(response); \n        })\n        .then(data => {\n            console.log(data);\n            dispatch({\n                type: SET_USER_DATA,\n                payload: data.user,\n            });\n            setCookie('accessToken', data.accessToken);\n            setCookie('refreshToken', data.refreshToken);\n        })\n        .catch((error) => {\n            console.log('error', error);\n            dispatch({\n                type: REGISTER_ERROR,\n                payload: error,\n            });\n        });\n}\n\nexport const updateUserData: AppThunk = ({ name, email, password }: TUserData) =>  (dispatch: AppDispatch) => {\n    fetch(`${API_AUTH}/user`, {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            'Authorization': getCookie('accessToken') || '',\n        },\n        body: JSON.stringify({ name, email, password }),\n    })\n        .then(checkResponse)\n        .then(data => {\n            console.log('data', data);\n            dispatch({\n                type: UPDATE_USER_DATA,\n                payload: data.user,\n            })\n        })\n        .catch((error) => {\n            console.log('error', error);\n            dispatch({\n                type: UPDATE_USER_DATA_ERROR,\n                payload: error,\n            })\n        });\n}\n\nexport const loginUser: AppThunk = ({ email, password }: TLoginData) =>  (dispatch: AppDispatch) => {\n    fetch(`${API_AUTH}/login`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify({ email, password }),\n    })\n        .then(checkResponse)\n        .then(data => {\n            console.log(data);\n            dispatch({\n                type: LOGIN_USER,\n                payload: data.user,\n            });\n            setCookie('accessToken', data.accessToken);\n            setCookie('refreshToken', data.refreshToken);\n        })\n        .catch((error) => {\n            console.log('error', error);\n            dispatch({\n                type: LOGIN_USER_ERROR,\n                payload: error,\n            })\n        });\n}\n\nexport const forgotPassword: AppThunk = ({ email }: { email: string}) =>  (dispatch: AppDispatch) => {\n    fetch(`${API_ADDRESS}/password-reset`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify({ email }),\n    })\n        .then(checkResponse)\n        .then(data => {\n            console.log('data', data);\n            dispatch({\n                type: FORGOT_PASSWORD,\n            });\n        })\n        .catch((error) => {\n            console.log('error', error)\n            dispatch({\n                type: FORGOT_PASSWORD_ERROR,\n                payload: error,\n            });\n        });\n}\n\nexport const resetPassword: AppThunk = ({ password, token }: { password: string, token: string }) =>  (dispatch: AppDispatch) => {\n    fetch(`${API_ADDRESS}/password-reset/reset`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify({ password, token }),\n    })\n        .then(checkResponse)\n        .then(data => {\n            console.log('data', data);\n            dispatch({\n                type: RESET_PASSWORD,\n            });\n        })\n        .catch((error) => {\n            console.log('error', error)\n            dispatch({\n                type: RESET_PASSWORD_ERROR,\n                payload: error,\n            });\n        });\n}\n\nexport const logoutUser: AppThunk = () =>  (dispatch: AppDispatch)  => { \n    fetch(`${API_AUTH}/logout`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify({ token: getCookie('refreshToken') }),\n    })\n        .then(checkResponse)\n        .then(data => {\n            console.log('data', data);\n            dispatch({\n                type: LOGOUT_SUCCESS,\n                name: '',\n                email: '',\n            });\n            setCookie('accessToken', '');\n            setCookie('refreshToken', '');\n        })\n        .catch((error) => {\n            console.log('error', error);\n            dispatch({\n                type: LOGOUT_ERROR,\n                payload: error,\n            })\n        });\n}\n\nexport const checkUser: AppThunk = () =>  (dispatch: AppDispatch) => {\n    const refreshToken = getCookie(\"refreshToken\");\n    if (refreshToken) {\n        fetch(`${API_AUTH}/user`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                'Authorization': getCookie('accessToken') || '',\n            }\n        })\n            .then(response => {\n                if (response.status === 403) {\n                    throw dispatch(token());\n                } else {\n                    return checkResponse(response);\n                }\n            })\n            .then(data => {\n                console.log(data);\n                dispatch({\n                    type: USER_SUCCESS,\n                    payload: data.user,\n                });\n            })\n            .catch((error) => {\n                if (error === undefined || error.message === 'jwt expired') {\n                    console.log(error, 'Надо обновить токен')\n                    dispatch(token());\n                } else {\n                    console.log(error);\n                    dispatch({\n                        type: USER_ERROR,\n                    });\n                }\n            });\n    }\n}\n\nexport const token: AppThunk = () =>  (dispatch: AppDispatch) => { \n    fetch(`${API_AUTH}/token`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n        },\n        body: JSON.stringify({token: getCookie('accessToken')}),\n    })\n        .then(checkResponse)\n        .then(data => {\n            setCookie('accessToken', data.accessToken);\n            setCookie('refreshToken', data.refreshToken);\n            dispatch({\n                type: TOKEN_SUCCESS,\n            });\n        }).then(() => {\n            dispatch(checkUser());\n        })\n        .catch((error) => {\n            console.log('Пользователь не авторизован', error);\n            dispatch({\n                type: TOKEN_ERROR,\n                payload: error,\n            })\n        });\n}\n\n\n","import type { Middleware, MiddlewareAPI } from 'redux';\nimport { getCookie } from '../../utils/coockie';\nimport { AppDispatch, RootState } from '../../utils/types';\nimport { TWsActions } from './ws-types';\n\nexport const socketMiddleware = (wsUrl: string, wsActions: TWsActions): Middleware => {\n  return (store: MiddlewareAPI<AppDispatch, RootState>) => {\n    let socket: WebSocket | null = null;\n    return next => action => {\n\n      const { dispatch } = store;\n      const { type, payload } = action;\n      const { wsInit, wsInitUser, wsSendMessage, onOpen, onClose, onError, onMessage } = wsActions;\n      const accessToken: string | undefined = getCookie('accessToken');\n      const token = accessToken && accessToken.split(\" \")[1];\n\n      if (type === wsInit) {\n        socket = new WebSocket(`${wsUrl}/all`);\n      }\n      if (type === wsInitUser) {\n        socket = new WebSocket(`${wsUrl}?token=${token}`);\n      }\n\n      if (socket) {\n        socket.onopen = event => {\n          dispatch({ \n            type: onOpen, \n            payload: event \n          });\n        };\n\n        socket.onerror = event => {\n          dispatch({ \n            type: onError, \n            payload: event \n          });\n        };\n\n        socket.onmessage = event => {\n          const { data } = event;\n          const parsedData = JSON.parse(data);\n          const { success, ...restParsedData } = parsedData;\n\n          dispatch({ \n            type: onMessage, \n            payload: restParsedData \n          });\n        };\n\n        socket.onclose = event => {\n          dispatch({ \n            type: onClose, \n            payload: event \n          });\n        };\n\n        if (type === wsSendMessage) {\n          console.log('send');\n          const message = { ...payload };\n          socket.send(JSON.stringify(message));\n        }\n      }\n\n      next(action);\n    };\n  };\n};\n","import { STORE_NAME } from './actions';\n\nexport const getUserName = store => store[STORE_NAME].name;\nexport const getUserEmail = store => store[STORE_NAME].email;\nexport const isLoginUser = store => store[STORE_NAME].loginUser;\n\nexport const isEmailSent = store => store[STORE_NAME].emailSent;\n\nexport const responseError = store => store[STORE_NAME].errorMessage;\n\nexport const isPasswordReseted = store => store[STORE_NAME].passwordReseted;\nexport const isResetPasswordInProgress = store => store[STORE_NAME].resetPasswordInProgress;\n","import { TypedUseSelectorHook, useSelector as selectorHook, useDispatch as dispatchHook } from 'react-redux';\nimport { RootState, AppDispatch } from '../utils/types';\n  \nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\nexport const useDispatch = () => dispatchHook<AppDispatch>()\n","import React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nimport { Logo, BurgerIcon, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport { isLoginUser, getUserName } from '../../services/Auth/selectors';\nimport { useSelector } from '../../hooks/hooks';\n\nimport appHeaderStyles from './AppHeader.module.css';\n\nconst AppHeader: React.FC = () => {\n  const isAuthUser = useSelector(isLoginUser);\n  const userName = useSelector(getUserName);\n\n  const profileActive = !!useRouteMatch({ path: '/profile' });\n  const constructorActive = !!useRouteMatch({ path: '/', exact: true });\n  const feedActive = !!useRouteMatch({ path: '/feed' });\n  const burgerType = constructorActive ? 'primary' : 'secondary';\n  const profileIconType = profileActive ? 'primary' : 'secondary';\n\n  return (\n    <div className={appHeaderStyles.appHeader}>\n      <nav className={appHeaderStyles.mainMenu}>\n        <Link to=\"/\" className={`${appHeaderStyles.headerLink} ${constructorActive && appHeaderStyles.activeLink}`}>\n          <BurgerIcon type={burgerType}/>\n          <p className=\"text text_type_main-default\">Конструктор</p>\n        </Link> \n        <Link to=\"/feed\" className={`${appHeaderStyles.headerLink} ${feedActive && appHeaderStyles.activeLink}`}>\n          <ListIcon type=\"secondary\" />\n          <p className=\"text text_type_main-default\">Лента заказов</p>\n        </Link> \n      </nav>\n      <Link to='/'>    \n          <Logo />\n      </Link>\n      <div className={appHeaderStyles.loginMenu}>\n        {isAuthUser ? \n          <Link to=\"/profile\" className={`${appHeaderStyles.headerLink} ${profileActive && appHeaderStyles.activeLink}`}>\n            <ProfileIcon type={profileIconType} />\n            <p className=\"text text_type_main-default\">{userName}</p>\n          </Link> :\n          <Link to=\"/login\" className={appHeaderStyles.headerLink}>\n            <ProfileIcon type=\"secondary\" />\n            <p className=\"text text_type_main-default\">Войти</p>\n          </Link> \n        }\n      </div>\n    </div>\n  );\n}\n\nexport default AppHeader;\n","import { FC } from 'react';\n\nimport modalOverlayStyles from './ModalOverlay.module.css';\n\ntype TModalOverlay = {\n  clickOverlay: () => void;\n};\n\nconst ModalOverlay: FC<TModalOverlay> = ({clickOverlay}) => { \n    return(\n       <div className={modalOverlayStyles.modalOverlay} onClick={clickOverlay}></div>\n    )\n}\n\nexport default ModalOverlay;\n","import React, { FC, useEffect, useCallback, ReactNode } from 'react';\nimport { createPortal } from 'react-dom';\nimport ModalOverlay from './components/ModalOverlay';\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport modalStyles from './Modal.module.css';\n\nconst modalRoot = document.getElementById(\"react-modals\") as HTMLElement;;\n\ntype TModal = {\n  children: ReactNode;\n  title?: string;\n  onClose: () => void;\n};\n\nconst Modal: FC<TModal> = ({children, title=\"\", onClose}) => { \n  const handleEsc =  useCallback((e) => {\n    if (e.keyCode === 27 || e.key === 'Escape') { onClose() }\n  }, [onClose]);\n  \n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleEsc);\n    return () => {\n      document.removeEventListener(\"keydown\", handleEsc);\n    };\n  }, [handleEsc]);\n\n  return createPortal(\n    (<div>\n      <div id=\"modal\" className={modalStyles.modal}>\n        <header className={modalStyles.modalHeader}>\n          <h1>{title}</h1>\n          <button\n            className={`${modalStyles.modalCloseButton}`}\n            onClick={onClose}\n          >\n            <CloseIcon type=\"primary\" />\n          </button>\n        </header>\n          {children}\n      </div>\n      <ModalOverlay clickOverlay={onClose} />\n    </div>), modalRoot\n  );\n}\n\nexport default Modal;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport orderDetailsStyles from './OrderDetails.module.css';\n\nconst OrderDetails: React.FC = () => { \n    const orderId = useSelector((state) => state['order'].orderId);\n\n    return(\n        <div className={orderDetailsStyles.orderDetails}>\n            <p className={`${orderDetailsStyles.orderNumber} text text_type_digits-large`}>{orderId}</p>\n            <p className='text text_type_main-medium'>идентификатор заказа</p>\n            <div className={orderDetailsStyles.image}/>\n            <p className={`${orderDetailsStyles.success} text text_type_main-default`}>Ваш заказ начали готовить</p>\n            <p className={`${orderDetailsStyles.text} text text_type_main-default text_color_inactive`}>Дождитесь готовности на орбитальной станции</p>\n        </div>\n    )\n}\n\nexport default OrderDetails;\n","import { v4 as uuidv4 } from 'uuid';\nimport { TIngridientData, TMovedIngredientsIndex } from '../../utils/types';\n\nexport const ADD_BUNS: 'ADD_BUNS' = 'ADD_BUNS';\nexport const ADD_INGREDIENTS: 'ADD_INGREDIENTS' = 'ADD_INGREDIENTS';\nexport const REMOVE_BUNS: 'REMOVE_BUNS' = 'REMOVE_BUNS';\nexport const REMOVE_INGREDIENT: 'REMOVE_INGREDIENT' = 'REMOVE_INGREDIENT';\nexport const CLEAR_ALL_INGREDIENTS: 'CLEAR_ALL_INGREDIENTS' = 'CLEAR_ALL_INGREDIENTS';\nexport const CHANGE_INGREDIENTS: 'CHANGE_INGREDIENTS' = 'CHANGE_INGREDIENTS';\n\nexport interface IAddBunsAction {\n    readonly type: typeof ADD_BUNS;\n    readonly payload: TIngridientData;\n}\n\nexport interface IAddIngredientsAction {\n    readonly type: typeof ADD_INGREDIENTS;\n    readonly payload: TIngridientData;\n    readonly uuid: any;\n}\n\nexport interface IClearAllIngredientsAction {\n    readonly type: typeof CLEAR_ALL_INGREDIENTS;\n}\n\nexport interface IRemoveBunsActions {\n    readonly type: typeof REMOVE_BUNS;\n}\n\nexport interface IRemoveIngredientAction {\n    readonly type: typeof REMOVE_INGREDIENT;\n    readonly payload: number;\n}\n\nexport interface IChangeIngredients {\n    readonly type: typeof CHANGE_INGREDIENTS;\n    readonly payload: TMovedIngredientsIndex;\n}\n\nexport type TConstructorIngridientsActions =\n    | IAddBunsAction\n    | IAddIngredientsAction\n    | IClearAllIngredientsAction\n    | IRemoveBunsActions\n    | IRemoveIngredientAction\n    | IChangeIngredients;\n\nexport const addBuns = (item: TIngridientData): TConstructorIngridientsActions => ({\n        type: ADD_BUNS,\n        payload: item,\n});\n\nexport const addIngredients = (item: TIngridientData): TConstructorIngridientsActions => ({\n        type: ADD_INGREDIENTS,\n        payload: item,\n        uuid: uuidv4(),\n});\n","import React, { useRef } from 'react';\nimport { useDispatch, useSelector } from '../../../hooks/hooks';\nimport { useDrag, useDrop, DropTargetMonitor } from 'react-dnd';\nimport { XYCoord } from \"dnd-core\";\n\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport burgerConstructorStyles from '../BurgerConstructor.module.css';\nimport { REMOVE_INGREDIENT } from '../../../services/ContructorIngridients/actions';\nimport { TIngridientData } from '../../../utils/types';\n\ntype TSelectIngredient = {\n    data: TIngridientData,\n    index: number,\n    moveIng: (dragIndex: number, hoverIndex: number) => void,\n};\n\ntype DragItem = {\n    index: number;\n    uuid?: number\n  }\n\nconst SelectIngredient: React.FC<TSelectIngredient> = ({ data, index, moveIng }) => {\n    const dispatch = useDispatch();\n    const { price, name, image_mobile, uuid } = data;\n    const selectedIngredients = useSelector((state) => state['selectedIngredients'].selectedIngredients);\n    const ref = useRef<HTMLDivElement>(null);\n\n    const [, dropRef] = useDrop({\n        accept: \"selectIngredient\",\n        hover: (item: DragItem, monitor: DropTargetMonitor) => {\n            if (!ref.current) {\n                return;\n            }\n            const hoverIndex = index;\n\n            const dragCard = selectedIngredients.find(el => el.uuid === item.uuid);\n            // @ts-ignore\n            const dragIndex = selectedIngredients.indexOf(dragCard);\n\n            if (dragIndex === hoverIndex) return;\n\n            // Determine rectangle on screen\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\n            // Get vertical middle\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n            // Determine mouse position\n            const clientOffset = monitor.getClientOffset();\n            // Get pixels to the top\n            const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top;\n            // Only perform the move when the mouse has crossed half of the items height\n            // When dragging downwards, only move when the cursor is below 50%\n            // When dragging upwards, only move when the cursor is above 50%\n            // Dragging downwards\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n                return;\n            }\n            // Dragging upwards\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n                return;\n            }\n            moveIng(dragIndex, hoverIndex);\n            item.index = hoverIndex;\n        }\n    });\n\n    const [{ isDragging }, dragRef] = useDrag({\n        type: \"selectIngredient\",\n        item: () => {\n            return { uuid, index }\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    });\n\n    const opacity = isDragging ? 0 : 1;\n\n    dragRef(dropRef(ref));\n\n    return (\n        <div className={burgerConstructorStyles.ingridient} ref={ref} style={{ opacity }} >\n            <DragIcon type=\"primary\" />\n            <ConstructorElement \n                text={name}\n                price={price}\n                thumbnail={image_mobile}\n                handleClose={() => {\n                    dispatch({\n                        type: REMOVE_INGREDIENT,\n                        payload: uuid,\n                    });\n                }}\n            />\n        </div>\n    );\n}\n\nexport default SelectIngredient;\n","import { API_ORDER_ADDRESS } from '../../constants';\nimport { getCookie } from '../../utils/coockie';\nimport { AppDispatch, AppThunk } from '../../utils/types';\nimport { CLEAR_ALL_INGREDIENTS } from '../ContructorIngridients/actions';\n\nexport const SET_ORDER_ID: 'SET_ORDER_ID' = 'SET_ORDER_ID';\nexport const REMOVE_ORDER_ID: 'REMOVE_ORDER_ID' = 'REMOVE_ORDER_ID';\n\nexport interface IRemoveOrderIdAction {\n  readonly type: typeof REMOVE_ORDER_ID;\n}\n\nexport interface ISetOrderIdAction {\n  readonly type: typeof SET_ORDER_ID;\n  payload: number;\n}\n\nexport const setOrderId = (data: number): ISetOrderIdAction => ({\n  type: SET_ORDER_ID,\n  payload: data\n});\n\nexport const deleteOrderModal = (): IRemoveOrderIdAction => ({\n  type: REMOVE_ORDER_ID,\n});\n\nexport type TOrderActions = \n  | IRemoveOrderIdAction\n  | ISetOrderIdAction;\n\nexport const getOrder: AppThunk = (ids: { ingredients: string[] | any}) =>  (dispatch: AppDispatch) => {\n      fetch(API_ORDER_ADDRESS, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"authorization\": getCookie('accessToken') || 'null'\n          },\n          body: JSON.stringify(ids),\n        })\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n          return Promise.reject(response.status);\n        })\n        .then(data => {\n          dispatch(setOrderId(data.order.number));\n          dispatch({\n            type: CLEAR_ALL_INGREDIENTS,\n          });\n        })\n        .catch(err => alert(`Ой! Что-то пошло не так! ${err}`));\n}\n","import React, { useMemo, useState } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { Redirect, useLocation } from 'react-router-dom';\n\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Button, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport { useDispatch, useSelector } from '../../hooks/hooks';\nimport Modal from '../Modal/Modal';\nimport OrderDetails from '../OrderDetails/OrderDetails';\nimport SelectIngredient from './components/SelectIngredient';\nimport { REMOVE_ORDER_ID, getOrder } from '../../services/Order/actions';\nimport { addBuns, addIngredients } from '../../services/ContructorIngridients/actions';\nimport { CHANGE_INGREDIENTS } from '../../services/ContructorIngridients/actions';\nimport { isLoginUser } from '../../services/Auth/selectors';\n\nimport burgerConstructorStyles from './BurgerConstructor.module.css';\nimport { TIngridientData } from '../../utils/types';\n\nconst BurgerConstructor: React.FC = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const { selectedIngredients, buns } = useSelector((state) => state['selectedIngredients']);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const userLogin =  useSelector(isLoginUser);\n  const [redirect, setRedirect] = useState(false);\n\n  const isBunAdded = useMemo(() => {\n    return !(buns === undefined || buns === null);\n  }, [buns]);\n\n  const [, dropTarget] = useDrop({\n    accept: 'ingredients',\n    drop(item: { data: TIngridientData }) {\n        item.data.type === 'bun' ?\n        dispatch(addBuns(item.data)) : \n        dispatch(addIngredients(item.data));\n    },\n  });\n\n  const handleClickOrderButton = () => {\n    if (!userLogin) {\n      setRedirect(true);\n      return;\n    }\n\n    if (!isBunAdded) return;\n    const selectedIds = [...selectedIngredients.map((item: TIngridientData) => item._id)];\n    const bunId = buns?._id;\n    const allIdsForOrder = {\n      ingredients: [...selectedIds, bunId],\n    };\n\n    dispatch(getOrder(allIdsForOrder));\n    setIsModalOpen(true);\n  };\n\n  const onClose = () => {\n    dispatch({\n      type: REMOVE_ORDER_ID,\n    });\n    setIsModalOpen(false);\n  }\n\n  const totalPrice = useMemo(()=> {\n    const ingSum = selectedIngredients ? selectedIngredients.reduce((total: number, current: TIngridientData) => {\n      return total + current.price;\n    }, 0) : 0;\n    const bunsSum = buns ? buns.price*2 : 0;\n    return ingSum + bunsSum;\n }, [selectedIngredients, buns]);\n\n const moveIng = (dragIndex, hoverIndex) => {\n    dispatch({\n      type: CHANGE_INGREDIENTS,\n      payload: {\n        fromIndex: dragIndex,\n        toIndex: hoverIndex\n      }\n    });\n }\n\n  if (redirect) {\n    return (\n      <Redirect\n        to={{\n          pathname: '/login',\n          state: { from: location },\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className={burgerConstructorStyles.burgerConstructor} ref={dropTarget}>\n      {isModalOpen && \n        <Modal onClose={onClose}>\n          <OrderDetails />\n        </Modal>\n      }\n      { buns ? \n          <div className={`${burgerConstructorStyles.fixedPosition} buns`}>\n            <ConstructorElement\n              type=\"top\"\n              isLocked={true}\n              text={`${buns.name} (верх)`}\n              price={buns.price}\n              thumbnail={`${buns.image_mobile}`}\n            />\n          </div>\n       :           \n        <div className={`${burgerConstructorStyles.emptyConstructor} text text_type_main-medium`}>\n          Перетащите сюда булки!\n        </div>\n      }\n\n      { selectedIngredients.length !== 0 ?\n          <div className={`${burgerConstructorStyles.customScroll} ingredients`}> \n              {\n                selectedIngredients.map((item, index) => (\n                <SelectIngredient data={item} key={item.uuid} index={index} moveIng={moveIng}/>\n              )\n          )}\n          </div>\n        :         \n        <div className={`${burgerConstructorStyles.emptyConstructor} text text_type_main-medium`}>\n          Перетащите сюда ингридиенты!\n        </div>\n      }\n\n      { buns &&\n          <div className={`${burgerConstructorStyles.fixedPosition} buns`}>\n            <ConstructorElement\n              type=\"bottom\"\n              isLocked={true}\n              text={`${buns.name} (низ)`}\n              price={buns.price}\n              thumbnail={`${buns.image_mobile}`}\n            />\n          </div>\n      }\n\n      <div className={burgerConstructorStyles.orderFooter}>\n        <div className={burgerConstructorStyles.orderResult}>\n          <p className=\"text text_type_digits-medium\">{totalPrice}</p>\n          <CurrencyIcon type=\"primary\" />\n        </div>\n        <Button type=\"primary\" size=\"medium\" onClick={()=>handleClickOrderButton()}>Оформить заказ</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default BurgerConstructor;\n","import { TIngridientData } from \"../../utils/types\";\n\nexport const SET_INGREDIENT_DETAILS: 'SET_INGREDIENT_DETAILS' = 'SET_INGREDIENT_DETAILS';\nexport const REMOVE_INGREDIENT_DETAILS: 'REMOVE_INGREDIENT_DETAILS' = 'REMOVE_INGREDIENT_DETAILS';\nexport const STORE_NAME: string = 'ingredientDetails';\n\nexport interface ISetIngredientDetailsAction {\n    readonly type: typeof SET_INGREDIENT_DETAILS;\n    readonly payload: TIngridientData;\n}\n\nexport interface IRemoveIngredientDetailsAction {\n    readonly type: typeof REMOVE_INGREDIENT_DETAILS;\n}\n\nexport type TIngredientDetailsActions = \n    | ISetIngredientDetailsAction\n    | IRemoveIngredientDetailsAction;\n\nexport const setIngredientDetails = (item: TIngridientData): ISetIngredientDetailsAction => ({\n    type: SET_INGREDIENT_DETAILS,\n    payload: item,\n});\n\nexport const RemoveIngredientDetails = (): IRemoveIngredientDetailsAction => ({\n    type: REMOVE_INGREDIENT_DETAILS\n});\n","import React, { useMemo, FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDrag } from 'react-dnd';\n\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport { TIngridientData } from '../../../utils/types';\n\nimport ingridientCardStyles from './IngridientCard.module.css';\n\ntype TIngridientCard = {\n  data: TIngridientData;\n};\n\nconst IngridientCard: FC<TIngridientCard> = ({ data }) => {\n  const { price, image, name, _id } = data;\n  const selectedIngredients = useSelector((state) => state['selectedIngredients'].selectedIngredients);\n  const buns = useSelector((state) => state['selectedIngredients'].buns);\n\n  const [, dragRef] = useDrag({\n    type: 'ingredients',\n    item: () => {\n      return { data }\n    },\n  });\n\n  const selectMass = useMemo(()=> {\n    const allIngredients = buns ? [...selectedIngredients, buns] : selectedIngredients;\n    return allIngredients.reduce((obj, item) => {\n      if (!obj.hasOwnProperty(item._id)) {\n        obj[item._id] = 0;\n      }\n      item.type === 'bun' ? obj[item._id]=2 : obj[item._id]++;\n      return obj;\n    }, {});\n }, [selectedIngredients, buns]);\n\n  return (\n    <div className={ingridientCardStyles.ingridientCard} ref={dragRef}>\n      <div className={ingridientCardStyles.counterOuter}>\n        {selectMass[_id] && <div className={`${ingridientCardStyles.counter} text text_type_digits-default`}>{selectMass[_id]}</div>}\n      </div>\n      <img alt='' src={image} />\n      <div className={ingridientCardStyles.price}>\n        <p className=\"text text_type_digits-default\">{price}</p>\n        <CurrencyIcon type=\"primary\" />\n      </div>\n      <p className=\"text text_type_main-small\">{name}</p>\n    </div>\n  );\n}\n\nexport default IngridientCard;\n","import { STORE_NAME } from './actions';\nimport { RootState } from '../../utils/types';\n\nexport const getAllIngredients = (store: RootState) => store[STORE_NAME].ingredients;\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { useDispatch, useSelector } from '../../hooks/hooks';\nimport { useInView } from 'react-intersection-observer';\nimport { useHistory } from 'react-router-dom';\n\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport { setIngredientDetails } from '../../services/IngredientDetails/actions';\nimport IngridientCard from './components/IngridientCard';\nimport { getAllIngredients } from '../../services/AllIngridients/selectors'\nimport burgerIngredientsStyles from './BurgerIngredients.module.css';\nimport { TIngridientData } from '../../utils/types';\n\nconst BurgerIngredients: React.FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const productData = useSelector(getAllIngredients);\n\n  const [current, setCurrent] = useState('bun');\n  const buns = useMemo(() => { return productData.filter(item => item.type === 'bun') }, [productData]);\n  const sauces = useMemo(() => { return productData.filter(item => item.type === 'sauce') }, [productData]);\n  const mains = useMemo(() => { return productData.filter(item => item.type === 'main') }, [productData]);\n\n  const setTab = (tab) => {\n    setCurrent(tab);\n    const element = document.getElementById(tab);\n    if (element) element.scrollIntoView({ behavior: \"smooth\" });\n  };\n\nconst inViewOptions = {\n        threshold: 0,\n        trackVisibility: true,\n        delay: 100\n    };\n    const [bunRef, inViewBun] = useInView(inViewOptions);\n    const [mainRef, inViewMain] = useInView(inViewOptions);\n    const [sauceRef, inViewSauce] = useInView(inViewOptions);\n\n    useEffect(() => {\n        if (inViewBun) {\n          setCurrent('bun');\n        }\n        else if (inViewSauce) {\n          setCurrent('sauce');\n        }         else if (inViewMain) {\n          setCurrent('main');\n        }\n       }, [inViewBun, inViewMain, inViewSauce]);\n\n  const handleClickIngredients = (item: TIngridientData) => {\n    dispatch(setIngredientDetails(item));\n    history.push({\n      pathname: `/ingredients/${item._id}`,\n      state: { modal: true },\n    });\n  };\n\n  return (\n    <div className={burgerIngredientsStyles.burgerIngredients}>\n      <p className=\"text text_type_main-large\">Соберите бургер</p>\n      <div className={burgerIngredientsStyles.tab}>\n        <Tab value=\"bun\" active={current === 'bun'} onClick={setTab}>Булки</Tab>\n        <Tab value=\"sauce\" active={current === 'sauce'} onClick={setTab}>Соусы</Tab>\n        <Tab value=\"main\" active={current === 'main'} onClick={setTab}>Начинки</Tab>\n      </div>\n\n      <div className={burgerIngredientsStyles.customScroll}>\n        <p className=\"text text_type_main-medium\" id=\"bun\">Булки</p>\n        <div className={burgerIngredientsStyles.cards} ref={bunRef}>\n          {buns.map(item => (\n            <div key={item._id} onClick={()=>handleClickIngredients(item)}>\n              <IngridientCard data={item} />\n            </div>)\n          )}\n        </div>\n\n        <p className=\"text text_type_main-medium\" id=\"sauce\">Соусы</p>\n        <div className={burgerIngredientsStyles.cards} ref={sauceRef}>\n          {sauces.map(item => (\n            <div key={item._id} onClick={()=>handleClickIngredients(item)}>\n              <IngridientCard data={item} key={item._id}/>\n            </div>)\n          )}\n        </div>\n\n        <p className=\"text text_type_main-medium\" id=\"main\">Начинки</p>\n        <div className={burgerIngredientsStyles.cards} ref={mainRef}>\n          {mains.map(item => (\n            <div key={item._id} onClick={()=>handleClickIngredients(item)}>\n              <IngridientCard data={item} key={item._id}/>\n            </div>)\n          )}\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default BurgerIngredients;\n","import { STORE_NAME } from './actions';\nimport { RootState } from '../../utils/types';\n\nexport const getIngredientDetails = (store: RootState) => store[STORE_NAME].ingredientDetails;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\n\nimport Modal from '../Modal/Modal';\nimport { getAllIngredients } from '../../services/AllIngridients/selectors';\nimport { getIngredientDetails } from '../../services/IngredientDetails/selectors';\n\nimport ingredientDetailsStyles from './IngredientDetails.module.css';\nimport { TLocation, TParams } from '../../utils/types';\n\nconst IngredientDetails: React.FC = () => {\n    const { id } = useParams<TParams>();\n    const productData = useSelector(getAllIngredients);\n    const ingredientDetails = useSelector(getIngredientDetails) || productData.find((product) => product._id === id);\n    const { state } = useLocation<TLocation>();\n    const isModalOpen = state && state.modal;\n    const history = useHistory();\n\n    const { image_large, name, calories, fat, proteins, carbohydrates } = ingredientDetails;\n    const kbzu = [\n        {name: 'Калории,ккал', value: calories},\n        {name: 'Белки, г', value: proteins},\n        {name: 'Жиры, г', value: fat},\n        {name: 'Углеводы, г', value: carbohydrates},\n    ];\n    const content = (\n        <div className={ingredientDetailsStyles.ingredientDetails}>\n            {!isModalOpen && <p className={`${ingredientDetailsStyles.text} text text_type_main-medium`}>Детали ингредиента</p>}\n            <img alt='' src={image_large} />\n            <p className={`${ingredientDetailsStyles.text} text text_type_main-medium`}>{name}</p>\n            <div className={ingredientDetailsStyles.kbzu}>\n                {kbzu.map((item, index) => (\n                    <div key={index} className={ingredientDetailsStyles.ingredient}>\n                        <p className='text text_type_main-default text_color_inactive'>{item.name}</p>\n                        <p className='text text_type_digits-default text_color_inactive'>{item.value}</p>\n                    </div>\n                ))}\n            </div>\n        </div> \n    );\n\n    return(\n        <>\n        {isModalOpen ? (\n          <Modal onClose={() => history.goBack()} title=\"Детали ингредиента\">\n            {content}\n          </Modal>\n        ) : (\n          content\n        )}\n      </>\n    )\n};\n\nexport default IngredientDetails;\n","import React, { ReactNode } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { isLoginUser } from '../../services/Auth/selectors';\n\ntype TProtectedRoute = {\n  children: ReactNode;\n  path: string;\n  exact?: boolean;\n}\n\nconst ProtectedRoute: React.FC<TProtectedRoute> = ({ children, ...rest }) => {\n  const userLogin =  useSelector(isLoginUser);\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n      userLogin ? (\n          children\n        ) : (\n          <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n        )\n      }\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { useState, ChangeEvent, FormEvent } from 'react';\nimport { useDispatch, useSelector } from '../../hooks/hooks';\nimport { Link, Redirect, useLocation } from 'react-router-dom';\n\nimport {\n  Button,\n  Input,\n  PasswordInput,\n} from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport { loginUser } from '../../services/Auth/actions';\nimport { isLoginUser } from '../../services/Auth/selectors';\nimport { TLoginData } from '../../utils/types';\n\nimport styles from './login.module.css';\n\ntype TLocation = {\n  hash: string;\n  pathname: string;\n  search: string;\n  state: any;\n}\n\nconst LoginPage: React.FC = () => {\n  const dispatch = useDispatch();\n  const userLogin =  useSelector(isLoginUser);\n  const location: TLocation = useLocation();\n\n  const [formValue, setFormValue] = useState<TLoginData>({\n    email: \"\",\n    password: \"\",\n  });\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setFormValue({ ...formValue, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch(loginUser(formValue));\n  };\n\n  if (userLogin) {\n    return <Redirect to={ location.state?.from || '/' } />;\n  }\n\n  return (\n    <form className={styles.loginForm} onSubmit={handleSubmit}>\n      <span className=\"text_type_main-medium\">Вход</span>\n      <Input \n        name=\"email\" \n        onChange={onChange} \n        value={formValue.email}\n      />\n      <PasswordInput\n        name=\"password\"\n        onChange={onChange}\n        value={formValue.password}\n      />\n      <div className=\"login_button\">\n        <Button>Войти</Button>\n      </div>\n      <div className=\"mt-9\">\n        <span className=\"text_type_main-default text_color_inactive mr-2\">\n          Вы - новый пользователь?\n        </span>\n\n        <Link\n          to={{\n            pathname: \"/register\",\n          }}\n          className={styles.link}\n        >\n          Зарегистрироваться\n        </Link>\n      </div>\n      <div>\n        <span className=\"text_type_main-default text_color_inactive mr-2\">\n          Забыли пароль?\n        </span>\n        <Link\n          to={{\n            pathname: \"/forgot-password\",\n          }}\n          className={styles.link}\n        >\n          Восстановить пароль\n        </Link>\n      </div>\n    </form>\n  );\n}\n\nexport default LoginPage;\n","import React, { useState, ChangeEvent, FormEvent } from 'react';\nimport { useDispatch, useSelector } from '../../hooks/hooks';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport {\n  Button,\n  EmailInput,\n  Input,\n  PasswordInput,\n} from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport { register } from '../../services/Auth/actions';\nimport { isLoginUser } from '../../services/Auth/selectors';\n\nimport styles from './register.module.css';\n\nconst RegisterPage: React.FC = () => {\n    const dispatch = useDispatch();\n    const userLogin =  useSelector(isLoginUser);\n\n    const [formValue, setFormValue] = useState<{\n      name: string,\n      email: string,\n      password: string\n    }>({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n    });\n\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n      setFormValue({ ...formValue, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      dispatch(register(formValue));\n    };\n\n    if (userLogin) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <form className={styles.registerForm} onSubmit={handleSubmit}>\n          <span className=\"text_type_main-medium\">Регистрация</span>\n          <Input\n            name=\"name\"\n            type=\"text\"\n            placeholder={\"Имя\"}\n            onChange={onChange}\n            value={formValue.name}\n          />\n          <EmailInput \n            name=\"email\" \n            onChange={onChange} \n            value={formValue.email}\n          />\n          <PasswordInput\n            name=\"password\"\n            onChange={onChange} \n            value={formValue.password}\n          />\n          <Button>Зарегистрироваться</Button>\n          <div className=\"mt-9\">\n            <span className=\"text_type_main-default text_color_inactive mr-2\">\n              Уже зарегистрированы?\n            </span>\n            <Link to={\"/login\"} className={styles.link}>\n              Войти\n            </Link>\n          </div>\n        </form>\n      );\n}\n\nexport default RegisterPage;\n","\nimport React, { useState, ChangeEvent, FormEvent } from 'react';\nimport { useDispatch, useSelector } from '../../hooks/hooks';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport {\n  Button,\n  EmailInput,\n} from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport { isEmailSent } from '../../services/Auth/selectors';\nimport { forgotPassword } from '../../services/Auth/actions';\n\nimport styles from './forgot-password.module.css';\n\nconst ForgotPasswordPage: React.FC = () => {\n  const dispatch = useDispatch();\n  const checkIsEmailSent = useSelector(isEmailSent);\n\n  const [formValue, setFormValue] = useState<{ email: string }>({\n    email: '',\n  });\n\n  if (checkIsEmailSent) {\n    return (\n      <Redirect\n        to={{\n          pathname: '/reset-password',\n        }}\n      />\n    );\n  }\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setFormValue({ ...formValue, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch(forgotPassword(formValue));\n  };\n\n  return (\n    <form className={styles.forgotPasswordForm} onSubmit={handleSubmit}>\n        <span className=\"text_type_main-medium\">Восстановление пароля</span>\n        <EmailInput \n          name=\"email\"\n          value={formValue.email}\n          onChange={onChange}\n        />\n        <Button>Восстановить</Button>\n        <div className=\"mt-9\">\n        <span className=\"text_type_main-default text_color_inactive mr-2\">\n            Вспомнили пароль?\n        </span>\n        <Link\n            to={{\n              pathname: '/login',\n            }}\n            className={styles.link}\n        >\n            Войти\n        </Link>\n        </div>\n  </form>\n  );\n};\n\nexport default ForgotPasswordPage;\n","\nimport React, { useState, ChangeEvent, FormEvent } from 'react';\nimport { useDispatch, useSelector } from '../../hooks/hooks';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport {\n  Button,\n  Input,\n  PasswordInput,\n} from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport { isPasswordReseted, isLoginUser, isResetPasswordInProgress } from '../../services/Auth/selectors';\nimport { resetPassword } from '../../services/Auth/actions';\n\nimport styles from './reset-password.module.css';\n\nconst ResetPasswordPage: React.FC = () => {\n  const dispatch = useDispatch();\n  const checkIsPasswordReseted = useSelector(isPasswordReseted);\n  const userLogin = useSelector(isLoginUser);\n  const resetPasswordInProgress = useSelector(isResetPasswordInProgress);\n\n  const [formValue, setFormValue] = useState<{ password: string, token: string }>({\n    password: '',\n    token: '',\n  });\n\n  if (checkIsPasswordReseted) {\n    return (\n      <Redirect\n        to={{\n          pathname: '/login',\n        }}\n      />\n    );\n  }\n  if (userLogin || !resetPasswordInProgress) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setFormValue({ ...formValue, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch(resetPassword(formValue));\n  };\n\n  return (\n    <form className={styles.resetPasswordForm} onSubmit={handleSubmit}>\n        <span className=\"text_type_main-medium\">Восстановление пароля</span>\n        <PasswordInput\n          name=\"password\"\n          value={formValue.password}\n          onChange={onChange}\n        />\n        <Input\n          name=\"token\"\n          value={formValue.token}\n          type=\"text\"\n          placeholder=\"Введите код из письма\"\n          onChange={onChange}\n        />\n        <Button>Сохранить</Button>\n        <div className=\"mt-9\">\n            <span className=\"text_type_main-default text_color_inactive mr-2\">\n                Вспомнили пароль?\n            </span>\n            <Link\n                to={{\n                  pathname: '/login',\n                }}\n                className={styles.link}\n            >\n                Войти\n            </Link>\n        </div>\n  </form>\n  );\n}\n\nexport default ResetPasswordPage;\n","import React, { useState, ChangeEvent, FormEvent, SyntheticEvent } from 'react';\nimport { useDispatch, useSelector } from '../../hooks/hooks';\n\nimport {\n    Button,\n    EmailInput,\n    Input,\n    PasswordInput,\n  } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport { getUserName, getUserEmail } from '../../services/Auth/selectors';\nimport { updateUserData } from '../../services/Auth/actions';\n\nimport styles from './ProfileDetails.module.css';\n\nconst ProfileDetails: React.FC = () => {\n    const dispatch = useDispatch();\n    const name = useSelector(getUserName);\n    const email = useSelector(getUserEmail);\n\n    const baseUser = {\n        name: name,\n        email: email,\n        password: '',\n    }\n\n    const [formValue, setFormValue] = useState({\n        name: name,\n        email: email,\n        password: '',\n      });\n  \n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setFormValue({ ...formValue, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        dispatch(updateUserData(formValue));\n        setFormValue({ ...formValue, password: '' });\n    };\n\n    const handleCancel = (e: SyntheticEvent) => {\n        e.preventDefault();\n        setFormValue({ ...baseUser });\n      };\n\n    return (\n        <form className={`${styles.profileDetailsForm} mt-20`} onSubmit={handleSubmit}>\n            <Input\n                name=\"name\"\n                type=\"text\"\n                onChange={onChange}\n                value={formValue.name}\n                placeholder={\"Имя\"}\n            />\n            <EmailInput \n                name=\"email\"\n                onChange={onChange} \n                value={formValue.email} \n            />\n            <PasswordInput\n                name=\"password\"\n                onChange={onChange}\n                value={formValue.password}\n            />\n\n            <div className={styles.buttons}>\n                <span className={styles.link} onClick={handleCancel}>\n                    Отменить\n                </span>\n                <div className={styles.button}>\n                    <Button type=\"primary\" size=\"medium\">\n                        Сохранить\n                    </Button>\n                </div>\n            </div>\n        </form>\n    );\n}\n\nexport default ProfileDetails;\n","export const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS'; \nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\nexport const WS_SEND_MESSAGE: 'WS_SEND_MESSAGE' = 'WS_SEND_MESSAGE';\nexport const WS_CONNECTION_START_USER: 'WS_CONNECTION_START_USER' = 'WS_CONNECTION_START_USER';\n\nexport interface IWsConnectionSuccessAction {\n    readonly type: typeof WS_CONNECTION_SUCCESS;\n}\n\nexport interface IWsConnectionErrorAction {\n    readonly type: typeof WS_CONNECTION_ERROR;\n    readonly error?: any;\n    readonly payload?: any;\n}\n\nexport interface IWsConnectionClosedAction {\n    readonly type: typeof WS_CONNECTION_CLOSED;\n}\n\nexport interface IWsGetMessageAction {\n    readonly type: typeof WS_GET_MESSAGE;\n    readonly payload: any;\n}\n\nexport interface IWsSendMessageAction {\n    readonly type: typeof WS_SEND_MESSAGE;\n    readonly payload: any;\n}\n\nexport interface IWsConnectionStartAction {\n    readonly type: typeof WS_CONNECTION_START;\n}\n\nexport type TWebsocketActions = \n    | IWsConnectionSuccessAction\n    | IWsConnectionErrorAction\n    | IWsConnectionClosedAction\n    | IWsGetMessageAction\n    | IWsSendMessageAction\n    | IWsConnectionStartAction;\n\nexport const wsConnectionSuccess = (): IWsConnectionSuccessAction => {\n    return {\n        type: WS_CONNECTION_SUCCESS\n    };\n};\n\nexport const wsConnectionStart = (): IWsConnectionStartAction => {\n    return {\n        type: WS_CONNECTION_START\n    }\n}\n\nexport const wsConnectionError = (): IWsConnectionErrorAction => {\n    return {\n        type: WS_CONNECTION_ERROR\n    };\n};\n\nexport const wsConnectionClosed = (): IWsConnectionClosedAction => {\n    return {\n        type: WS_CONNECTION_CLOSED\n    };\n};\n\nexport const wsGetMessage = (message: any): IWsGetMessageAction => {\n    return {\n        type: WS_GET_MESSAGE,\n        payload: message\n    };\n};\n\nexport const wsSendMessage = (message: any): IWsSendMessageAction => {\n    return {\n        type: WS_SEND_MESSAGE,\n        payload: message\n    };\n};\n","import React from 'react';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Link, useLocation } from 'react-router-dom';\nimport {  useSelector } from 'react-redux';\n\nimport { getAllIngredients } from '../../../../services/AllIngridients/selectors';\nimport { TIngridientData, TLocation, TOrder } from '../../../../utils/types';\n\nimport styles from './Order.module.css';\n\nconst Order: React.FC<TOrder> = ({ orderInfo }) => {\n  const location = useLocation<TLocation>();\n  const url = location.pathname.includes('/profile/orders') ? '/profile/orders' : '/feed';\n  const ingredients = useSelector(getAllIngredients);\n\n  const orderIngs = \n    orderInfo.ingredients && orderInfo.ingredients.reduce(\n      (acc: Array<TIngridientData | undefined>, orderId: string) => {\n        for(let i = 0; i < ingredients.length; i++) {\n          if(ingredients[i]._id === orderId) {\n            acc.push(ingredients[i])\n          } \n        }\n        return acc;\n    }, []);\n\n  const totalPrice = orderIngs.length && orderIngs.reduce((acc: number, item: TIngridientData | undefined) => item && item.price ? acc + item.price : acc, 0);\n  const status = orderInfo.status === 'done' ? 'Выполнен' : 'Готовится';\n\n  const date = new Date(orderInfo.createdAt)\n    .toLocaleString(\"ru\", {\n      weekday: \"long\",\n      day: \"numeric\",\n      month: \"long\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      timeZoneName: \"short\"\n    })\n\n  return (\n    <Link \n      to={{\n        pathname: `${url}/${orderInfo._id}`,\n        state: { modal: true }\n      }}\n      className={styles.card}\n      key={orderInfo._id}\n    >\n      <li>\n        <div className={styles.info}>\n          <p className='text text_type_digits-default'>#{orderInfo.number}</p>\n          <p className='text text_type_main-default text_color_inactive'>{date}</p>\n        </div>\n        <p className='text text_type_main-medium mt-6'>{orderInfo.name}</p>\n        <p className={`text text_type_main-default mt-2 ${orderInfo.status !== 'done' && styles.status}`}>\n          {status}\n        </p>\n        <div className={`${styles.order} mt-6`}>\n          <ul className={styles.images}>\n            {orderIngs && orderIngs.map((ingredient: TIngridientData | undefined, index: number) => {\n              if (index < 6) { \n                return (\n                <li key={index} style={{zIndex: orderIngs.length - index}} className={`${styles.radius} ${orderIngs.length > 6 && index === 5 && styles.blackout}`}>\n                    <img className={`${styles.image}`} src={ingredient && ingredient.image} alt='Ингредиент' />\n                    {orderIngs.length > 6 && index === 5 && \n                    <p className={`${styles.number} text text_type_digits-default`}>{`+${orderIngs.length - 6}`}</p>\n                    }\n                </li>\n                )\n              } else {\n                return null;\n              }\n            })}\n          </ul>\n          <div className={styles.price}>\n            <p className=\"text text_type_digits-medium mr-2\">{totalPrice}</p>\n            <CurrencyIcon type=\"primary\"/>\n          </div>\n        </div>\n      </li>\n    </Link>\n  )\n}\n\nexport default Order;\n","import React, { useEffect} from 'react';\nimport { useDispatch, useSelector } from '../../hooks/hooks';\n\nimport { WS_CONNECTION_START_USER, WS_CONNECTION_CLOSED } from '../../services/Websocket/actions';\nimport { TOrderCard } from '../../utils/types';\nimport Order from './components/OrderInfo/Order';\n\nimport styles from './OrderList.module.css';\n\nconst OrdersList: React.FC = () => {\n    const dispatch = useDispatch();\n    const ordersInfo = useSelector(store => store.websocket.ordersInfo);\n\n    useEffect(() => {\n        dispatch({ type: WS_CONNECTION_START_USER });\n        return () => {\n          dispatch({ type: WS_CONNECTION_CLOSED });\n        }\n      },[dispatch]);\n\n    return (\n        <div>\n            { ordersInfo.orders ?\n                <div className={`${styles.orderList} ${styles.customScroll}`}>\n                    <ul className={`${styles.cards} mr-2`}>\n                        {ordersInfo.orders && ordersInfo.orders.map((item: TOrderCard, index: number) => {\n                            return <Order key={index} orderInfo={item}/>\n                        })}\n                    </ul>\n                </div> :\n                <span className=\"text_type_main-small\">...Тут пока пусто...</span>\n            }\n        </div>\n      );\n}\n\nexport default OrdersList;\n","import React, { useEffect, useState } from 'react';\nimport styles from './OrderDetails.module.css';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useDispatch, useSelector } from '../../../../hooks/hooks';\nimport { useHistory, useParams, useLocation } from 'react-router-dom';\n\nimport { getAllIngredients } from '../../../../services/AllIngridients/selectors';\nimport { WS_CONNECTION_CLOSED, WS_CONNECTION_START, WS_CONNECTION_START_USER } from '../../../../services/Websocket/actions';\nimport Modal from '../../../Modal/Modal';\nimport { TIngridientData, TLocation, TOrderCard } from '../../../../utils/types';\n\nconst OrderDetails: React.FC = () => {\n    const location = useLocation<TLocation>();\n    const isModalOpen = location.state && location.state.modal;\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(location.pathname.includes('/feed')) {\n          dispatch({ type: WS_CONNECTION_START });\n        } else if (location.pathname.includes('/profile/orders')) {\n          dispatch({ type: WS_CONNECTION_START_USER });\n        }\n        return () => {\n          dispatch({ type: WS_CONNECTION_CLOSED });\n        }\n      }, [dispatch, location]);\n\n    const dataOrders = useSelector(store => store.websocket.ordersInfo);\n    const ingredients = useSelector(getAllIngredients);\n\n    const [data, setData] = useState<TOrderCard>();\n    const params = useParams<{id: string}>();\n\n  useEffect(\n    () => {\n      setData(dataOrders.orders && dataOrders.orders.find(({ _id }: {_id: string}) => _id === params.id))\n    },\n    [params.id, data, dataOrders]\n  );\n\n  const date = data && new Date(data.createdAt).toLocaleString(\"ru\", {\n    weekday: \"long\",\n    day: \"numeric\",\n    month: \"long\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    timeZoneName: \"short\"\n  });\n\n  const orderIngs = \n    data?.ingredients.reduce(\n      (acc: Array<TIngridientData | undefined>, orderId: string) => {\n        for(let i = 0; i < ingredients.length; i++) {\n          if(ingredients[i]._id === orderId) {\n            acc.push(ingredients[i])\n          } \n        }\n        return acc;\n    }, []);\n\n  let uniqueIngredientsObj = \n    orderIngs && orderIngs.reduce((acc: any, item: TIngridientData | undefined) => {\n      if (!acc._id && item) {\n        acc[item._id] = item;\n      }\n      return acc;\n    }, {});\n  const uniqueIngredients = uniqueIngredientsObj && Object.values(uniqueIngredientsObj);\n  const totalPrice = orderIngs && orderIngs.reduce((acc: number, item: TIngridientData | undefined) => item && item.price ? acc + item.price : acc, 0);\n\n  const counter = (item: string) => {\n    const counts: any = {};\n    if(data?.ingredients) {\n      for (const num of data?.ingredients) {\n        counts[num] = counts[num] ? counts[num] + 1 : 1;\n      }\n    }\n    return counts[item] || 0;\n  }\n\n  const content = (\n    <div className={`${styles.container}`}>\n      <p className={`text text_type_digits-default mt-20 ${styles.id}`}>#{data && data.number}</p>\n      <p className='text text_type_main-medium mt-10'>{data && data.name}</p>\n      <p className={`${styles.status} text text_type_main-default mt-3`}>Выполнен</p>\n      <p className='text text_type_main-medium mt-15'>Состав:</p>\n      <div className={`${styles.box} ${styles.scroll}`}>\n        <ul className={`${styles.list} mt-6`}>\n          {uniqueIngredients && uniqueIngredients.map((item: TIngridientData) => {\n            return <li\n              key={item._id}\n              className={`${styles.card} mb-4`}\n            >\n              <div className={`${styles.radius} mr-4`}>\n                <img className={`${styles.image}`} src={item.image} alt='Ингредиент' />        \n              </div>\n              <p className={`text text_type_main-default mr-4 ${styles.text}`}>{item.name}</p>\n              <div className={`${styles.price} mr-6`}>\n                <p className='text text_type_digits-default mr-2'>\n                  {counter(item._id)} x {item.price}\n                </p>\n                <CurrencyIcon type=\"primary\"/>\n              </div>\n            </li>\n          })}\n        </ul>\n      </div>\n      <div className={`${styles.info} mt-10`}>\n        <p className='text text_type_main-default text_color_inactive'>{date}</p>\n        <div className={styles.price}>\n          <p className='text text_type_digits-default mr-2'>{totalPrice}</p>\n          <CurrencyIcon type=\"primary\"/>\n        </div>\n      </div>\n    </div>\n    )\n\n    return(\n        <>\n        {isModalOpen ? (\n          <Modal onClose={() => history.goBack()} title=\"Детали заказа\">\n            {content}\n          </Modal>\n        ) : (\n          content\n        )}\n      </>\n    )\n}\n\nexport default OrderDetails;\n","import React from 'react';\nimport { NavLink, Switch, Route, Redirect, useRouteMatch } from 'react-router-dom';\nimport { useDispatch, useSelector } from '../../hooks/hooks';\n\nimport ProfileDetails from '../../components/ProfileDetails/ProfileDetails';\nimport OrdersList from '../../components/OrderList/OrderList';\n\nimport { isLoginUser } from '../../services/Auth/selectors';\nimport { logoutUser } from '../../services/Auth/actions';\n\nimport OrderDetails from '../../components/OrderList/components/OrderDetails/OrderDetails';\nimport styles from './profile.module.css';\n\nconst ProfilePage: React.FC = () => {\n    const { path } = useRouteMatch();\n    const dispatch = useDispatch();\n    const getIsLoginUser = useSelector(isLoginUser);\n    const isOrderDetailsPage = window.location.href.match('orders/\\\\w+') === null;\n    const isOrderPage =  window.location.href.includes('orders');\n\n    const onClickLogout = () => {\n        dispatch(logoutUser());\n    }\n\n    if (!getIsLoginUser) {\n        return <Redirect to=\"/login\" />;\n    }\n\n    return (\n        <div className={styles.profileContainer}>\n            {isOrderDetailsPage && <div className={styles.left}>\n                <nav className={`${styles.nav} mr-15 mt-20`}>\n                    <NavLink \n                        exact\n                        to={path} \n                        className={`${styles.text} text text_type_main-medium text_color_inactive`}\n                        activeStyle={{color: \"#fff\"}}\n                    >\n                        Профиль\n                    </NavLink>\n                    <NavLink \n                        to={`${path}/orders`}\n                        className={`${styles.text} text text_type_main-medium text_color_inactive`}\n                        activeStyle={{color: \"#fff\"}}\n                    >\n                        История заказов\n                    </NavLink>\n                    <div \n                        className={`${styles.link}`}\n                        onClick={(() => onClickLogout())}\n                    >\n                        <p className={`${styles.text}text text_type_main-medium text_color_inactive`}>\n                            Выход\n                        </p>\n                    </div>\n                </nav>\n                { isOrderPage ?\n                    <p className={`${styles.description} text text_type_main-default text_color_inactive`}>\n                        В этом разделе вы можете просмотреть свою историю заказов\n                    </p> :\n                    <p className={`${styles.description} text text_type_main-default text_color_inactive`}>\n                        В этом разделе вы можете изменить свои персональные данные\n                    </p>\n                }\n            </div> }\n            <div className={styles.right}>\n            <Switch>\n                <Route path={`${path}`} exact>\n                    <ProfileDetails />\n                </Route>\n                <Route path={`${path}/orders`} exact>\n                    <OrdersList />\n                </Route>\n                <Route path={`${path}/orders/:id`} exact>\n                    <OrderDetails />\n                </Route>\n            </Switch>\n            </div>\n        </div>\n        );\n}\n\nexport default ProfilePage;\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport styles from './error-page.module.css';\n\nconst ErrorPage: React.FC = () => {\n    console.log('====Redirect======', window.location.href.includes('react-burger'));\n    if (window.location.href.includes('react-burger')) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <form className={styles.errorForm}>\n            <span className=\"text_type_main-medium\">К сожалению такой страницы нет</span>\n            <div className={styles.image}/>\n            <Link\n                to={{ pathname: \"/\" }}\n                className={styles.link}\n            >\n                Вернуться на главную\n            </Link>\n        </form>\n      );\n}\n\nexport default ErrorPage;\n","import React from 'react';\nimport { useSelector } from '../../hooks/hooks';\nimport { TOrderCard } from '../../utils/types';\n\nimport styles from './OrdersStatistic.module.css';\n\nconst OrdersStatistic: React.FC = () => {\n  const ordersInfo = useSelector(store => store.websocket.ordersInfo);\n  const ready = ordersInfo.orders && [...ordersInfo.orders.filter((item: TOrderCard) => \n    item.status === 'done' && item.status\n  )].map(item => item.number)\n  const inWork = ordersInfo.orders && [...ordersInfo.orders.filter((item: TOrderCard) => \n    item.status !== 'done' && item.status\n  )].map(item => item.number)\n\n  return (\n    <div className={styles.ordersStatistic}>\n      <div className={`${styles.box} mt-15 mb-6`}>\n        <div className={`${styles.done} mr-10`}>\n          <p className='text text_type_main-medium'>Готовы:</p>\n          {ready && <ul className={styles.list}>\n             {ready.map((item: number, index: number) => {\n              return <li key={index} className={`${styles.text} text text_type_digits-default`}>{item}</li>\n            })}\n          </ul>}\n        </div>\n        <div className={`${styles.work} ml-2`}>\n          <p className='text text_type_main-medium'>В работе:</p>\n          {inWork && <ul className={styles.list}>\n            {inWork.map((item: TOrderCard, index: number) => {\n              return <li key={index} className=\"text text_type_digits-default\">{item}</li>\n            })}  \n          </ul>}\n        </div>\n      </div>\n      <div className={`${styles.info} mb-15`}>\n        <p className='text text_type_main-medium'>Выполнено за все время:</p>\n        <p className={`${styles.number} text text_type_digits-large`}>{ordersInfo.total}</p>\n      </div>\n      <div className={styles.info}>\n        <p className='text text_type_main-medium'>Выполнено за сегодня:</p>\n        <p className={`${styles.number} text text_type_digits-large`}>{ordersInfo.totalToday}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default OrdersStatistic;\n","import React, { useEffect } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport { useDispatch } from '../../hooks/hooks';\n\nimport OrderList from '../../components/OrderList/OrderList';\nimport { WS_CONNECTION_CLOSED, WS_CONNECTION_START } from '../../services/Websocket/actions';\nimport OrdersStatistic from '../../components/OrdersStatistic/OrdersStatistic';\nimport OrderDetails from '../../components/OrderList/components/OrderDetails/OrderDetails';\n\nimport styles from './feed-page.module.css';\n\nconst FeedPage: React.FC = () => {\n  const { path } = useRouteMatch();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch({ type: WS_CONNECTION_START });\n    return () => {\n      dispatch({ type: WS_CONNECTION_CLOSED });\n    }\n  }, [dispatch]);\n\n  return (\n    <div className={`${styles.container} mt-10`}>\n      <div className={styles.box}>\n        <p className=\"text text_type_main-large mb-5\">\n          Лента заказов\n        </p>\n        <OrderList />\n      </div>\n        <OrdersStatistic />\n        <>\n        <Switch>\n          <Route path={`${path}/:id`} exact={true}>\n              <OrderDetails />\n          </Route>\n        </Switch>\n        </>\n    </div>\n  );\n}\n\nexport default FeedPage;\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\nimport { getProducts } from '../services/AllIngridients/actions';\nimport { checkUser } from '../services/Auth/actions';\nimport AppHeader from './AppHeader/AppHeader';\nimport BurgerConstructor from './BurgerConstructor/BurgerConstructor';\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients';\nimport IngredientDetails from './IngredientDetails/IngredientDetails';\nimport ProtectedRoute from './ProtectedRoute/ProtectedRoute';\n\nimport { \n  LoginPage,\n  ForgotPasswordPage,\n  RegisterPage,\n  ResetPasswordPage,\n  ProfilePage,\n  ErrorPage,\n  FeedPage,\n} from '../pages';\n\nimport appStyles from './App.module.css';\nimport OrderDetails from './OrderList/components/OrderDetails/OrderDetails';\nimport { useDispatch, useSelector } from '../hooks/hooks';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const { ingredientsIsLoaded, ingredientsLoadedError } = useSelector(state => state['ingredients']);\n  \n  useEffect(() => {\n    dispatch(getProducts());\n    dispatch(checkUser());\n  }, [dispatch]);\n\n  return (\n    <Router>\n      <div className={appStyles.app}>\n        <AppHeader />\n        <DndProvider backend={HTML5Backend}>\n          <main className=\"mainContent\">\n            {!ingredientsIsLoaded && (\n                <p className=\"text text_type_main-small\">Загрузка...</p>\n            )}\n            {ingredientsLoadedError && (\n                <p className=\"text text_type_main-small\">\n                  Ошибка загрузки данных.\n                  Попробуйте обновить страницу.\n                </p>\n            )}\n            {ingredientsIsLoaded &&\n              <Switch>\n                <Route path=\"/\" exact>\n                  <BurgerIngredients/>\n                  <BurgerConstructor/>\n                </Route>\n                <Route path=\"/login\">\n                  <LoginPage/>\n                </Route>\n                <Route path=\"/forgot-password\">\n                  <ForgotPasswordPage/>\n                </Route>\n                <Route path=\"/register\">\n                  <RegisterPage/>\n                </Route>\n                <Route path=\"/reset-password\">\n                  <ResetPasswordPage/>\n                </Route>\n                <ProtectedRoute path=\"/profile\">\n                  <ProfilePage/>\n                </ProtectedRoute>\n                <Route path=\"/ingredients/:id\" exact>\n                  <IngredientDetails/>\n                </Route>\n                <ProtectedRoute path=\"/profile/orders/:id\" exact>\n                  <OrderDetails />\n                </ProtectedRoute>\n                <Route path=\"/feed\" exact>\n                  <FeedPage />\n                </Route>\n                <Route path=\"/feed/:id\" exact>\n                  <OrderDetails />\n                </Route>\n                <Route>\n                  <ErrorPage/>\n                </Route>\n              </Switch>\n            }\n          </main>\n        </DndProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { TIngridientData } from '../../utils/types';\nimport {\n    LOAD_INGREDIENTS,\n    LOAD_INGREDIENTS_PROCESS,\n    LOAD_INGREDIENTS_ERROR,\n} from './actions';\n\ntype TAllIngredient = {\n    ingredients: TIngridientData[],\n    ingredientsIsLoaded: boolean,\n    ingredientsLoadedError: boolean,\n}\n\nconst initialState: TAllIngredient = {\n    ingredients: [],\n    ingredientsIsLoaded: false,\n    ingredientsLoadedError: false,\n};\n\nexport const allIngredientReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case LOAD_INGREDIENTS: {\n            return {\n                ...state,\n                ingredients: action.data,\n                ingredientsIsLoaded: true,\n            }\n        }\n        case LOAD_INGREDIENTS_PROCESS: {\n            return {\n                ...state,\n                ingredientsIsLoaded: false,\n            }\n        }\n\n        case LOAD_INGREDIENTS_ERROR: {\n            return {\n                ...state,\n                ingredientsLoadedError: true,\n            }\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n","import { TIngridientData } from '../../utils/types';\nimport { SET_INGREDIENT_DETAILS, REMOVE_INGREDIENT_DETAILS, TIngredientDetailsActions } from './actions';\n\ntype TIngredientDetails = {\n  ingredientDetails: TIngridientData | null,\n}\n\nconst initialState: TIngredientDetails = {\n  ingredientDetails: null,\n};\n\nexport const ingredientDetailsReducer = (state = initialState, action: TIngredientDetailsActions): TIngredientDetails => {\n    switch (action.type) {\n      case SET_INGREDIENT_DETAILS: {\n        return {\n          ...state,\n          ingredientDetails: action.payload,\n        };\n      }\n      case REMOVE_INGREDIENT_DETAILS: {\n        return {\n          ...state,\n          ingredientDetails: null,\n        };\n      }\n      default: {\n        return state;\n      }\n    }\n};\n","import { SET_ORDER_ID, REMOVE_ORDER_ID, TOrderActions } from './actions';\n\ntype TOrderState = {\n  orderId: number | null;\n}\n\nconst initialState: TOrderState = {\n  orderId: null,\n};\n\nexport const orderReducer = (state = initialState, action: TOrderActions): TOrderState => {\n    switch (action.type) {\n      case SET_ORDER_ID: {\n        return {\n          ...state,\n          orderId: action.payload,\n        };\n      }\n      case REMOVE_ORDER_ID: {\n        return {\n          ...state,\n          orderId: null,\n        };\n      }\n      default: {\n        return state;\n      }\n    }\n};\n","import { TIngridientData } from '../../utils/types';\nimport { \n    ADD_BUNS, \n    ADD_INGREDIENTS, \n    REMOVE_BUNS, \n    REMOVE_INGREDIENT, \n    CLEAR_ALL_INGREDIENTS, \n    CHANGE_INGREDIENTS, \n    TConstructorIngridientsActions\n} \nfrom './actions';\n\ntype TSelectedIngredients = {\n    buns: TIngridientData & { uuid?: number } | null,\n    selectedIngredients: TIngridientData[]\n}\n\nconst initialState: TSelectedIngredients = {\n    buns: null,\n    selectedIngredients: [],\n  };\n\n  export const selectedIngredientsReducer = (state = initialState, action: TConstructorIngridientsActions): TSelectedIngredients => {\n    switch (action.type) {\n        case CLEAR_ALL_INGREDIENTS: {\n        return {\n            buns: null,\n            selectedIngredients: [],\n        };\n        }\n        case ADD_BUNS: {\n            return {\n                ...state,\n                buns: action.payload\n            }\n        }\n        case REMOVE_BUNS: {\n            return {\n                ...state,\n                buns: null\n            }\n        }\n        case ADD_INGREDIENTS: {\n            return {\n                ...state,\n                selectedIngredients: [...state.selectedIngredients, {...action.payload, uuid: action.uuid}]\n            }\n        }\n        case REMOVE_INGREDIENT: {\n            return {\n                ...state,\n                selectedIngredients: state.selectedIngredients.filter((item) => item.uuid !== action.payload)\n            }\n        }\n        case CHANGE_INGREDIENTS : {\n            const ingredients = [...state.selectedIngredients];\n            ingredients.splice(action.payload.toIndex, 0, ingredients.splice(action.payload.fromIndex, 1)[0]);\n\n            return {\n                ...state,\n                selectedIngredients: ingredients\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n};\n","import {\n    SET_USER_DATA,\n    UPDATE_USER_DATA,\n    UPDATE_USER_DATA_ERROR,\n    \n    REGISTER_ERROR,\n    REGISTER_SENDING,\n\n    LOGIN_USER_ERROR,\n    LOGIN_USER,\n\n    FORGOT_PASSWORD_ERROR,\n    FORGOT_PASSWORD,\n\n    RESET_PASSWORD_ERROR,\n    RESET_PASSWORD,\n    \n    LOGOUT_ERROR,\n    LOGOUT_SUCCESS,\n\n    TOKEN_ERROR,\n    TOKEN_SUCCESS,\n\n    USER_ERROR,\n    USER_SUCCESS,\n    TAuthActions,\n\n} from './actions';\n\nexport type TAuth = { \n    loginUser: boolean,\n    loginError: boolean,\n    registerSending: boolean,\n    registerError: boolean,\n    updateUserDataError: boolean,\n    name: string,\n    email: string,\n    errorMessage: string,\n    emailSent: boolean,\n    passwordReseted: boolean,\n    resetPasswordInProgress: boolean,\n}\n\nconst initialStateProfile: TAuth = {\n    loginUser: false,\n    loginError: false,\n    registerSending: false,\n    registerError: false,\n    updateUserDataError: false,\n    name: '',\n    email: '',\n    errorMessage: '',\n    emailSent: false,\n    passwordReseted: false,\n    resetPasswordInProgress: false,\n};\n  \nexport const auth = (state = initialStateProfile, action: TAuthActions) => {\n\n    switch (action.type) {\n\n        case TOKEN_SUCCESS: {\n            return {\n                ...state,\n            }\n        }\n\n        case TOKEN_ERROR: {\n            return {\n                ...state,\n                errorMessage: action.payload.error,\n            }\n        }\n\n        case USER_SUCCESS: {\n            return {\n                ...state,\n                loginUser: true,\n                name: action.payload.name,\n                email: action.payload.email,\n            }\n        }\n\n        case USER_ERROR: {\n            return {\n                ...state,\n            }\n        }\n\n        case REGISTER_SENDING: {\n            return {\n                ...state,\n                registerSending: true,\n                errorMessage: '',\n            }\n        }\n\n        case SET_USER_DATA: {\n            return {\n                ...state,\n                registerError: false,\n                registerSending: false,\n                loginUser: true,\n                name: action.payload.name,\n                email: action.payload.email,\n                errorMessage: '',\n            }\n        }\n\n        case UPDATE_USER_DATA: {\n            return {\n                ...state,\n                updateUserDataError: false,\n                name: action.payload.name,\n                email: action.payload.email,\n                errorMessage: '',\n            }\n        }\n\n        case UPDATE_USER_DATA_ERROR: {\n            return {\n                ...state,\n                updateUserDataError: true,\n                errorMessage: action.payload.error,\n            }\n        }\n\n        case REGISTER_ERROR: {\n            return {\n                ...state,\n                registerError: true,\n                registerSending: false,\n                errorMessage: action.payload.error,\n            }\n        }\n        case LOGIN_USER: {\n            return {\n                ...state,\n                loginUser: true,\n                loginError: false,\n                name: action.payload.name,\n                email: action.payload.email,\n                errorMessage: '',\n            }\n\n        }\n\n        case LOGIN_USER_ERROR: {\n            return {\n                ...state,\n                loginUser: false,\n                loginError: true,\n                errorMessage: action.payload.error,\n            }\n        }\n\n        case FORGOT_PASSWORD: {\n            return {\n                ...state,\n                emailSent: true,\n                errorMessage: '',\n                resetPasswordInProgress: true,\n            }\n        }\n\n        case FORGOT_PASSWORD_ERROR: {\n            return {\n                ...state,\n                errorMessage: action.payload.error,\n                resetPasswordInProgress: false,\n            }\n        }\n\n        case RESET_PASSWORD: {\n            return {\n                ...state,\n                passwordReseted: true,\n                resetPasswordInProgress: true,\n                errorMessage: '',\n            }\n        }\n\n        case RESET_PASSWORD_ERROR: {\n            return {\n                ...state,\n                passwordReseted: false,\n                resetPasswordInProgress: false,\n                errorMessage: action.payload.error,\n            }\n        }\n\n        case LOGOUT_SUCCESS: {\n            return {\n                ...state,\n                loginUser: false,\n                name: '',\n                email: '',\n                errorMessage: '',\n            }\n        }\n\n        case LOGOUT_ERROR: {\n            return {\n                ...state,\n                errorMessage: action.payload.error,\n            }\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n","import {\n    WS_CONNECTION_SUCCESS,\n    WS_CONNECTION_ERROR,\n    WS_CONNECTION_CLOSED,\n    WS_GET_MESSAGE,\n    WS_CONNECTION_START,\n    TWebsocketActions\n} from './actions';\n\nconst initialState = {\n    wsConnected: false,\n    ordersInfo: []\n};\n\nexport const websocketReducer = (state = initialState, action: TWebsocketActions) => {\n    switch (action.type) {\n        case WS_CONNECTION_SUCCESS:\n        return {\n            ...state,\n            error: undefined,\n            wsConnected: true\n        };\n        case WS_CONNECTION_START:\n            return {\n                ...state,\n            }\n        case WS_CONNECTION_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n                wsConnected: false\n            };\n        case WS_CONNECTION_CLOSED:\n            return {\n                ...state,\n                error: undefined,\n                wsConnected: false\n            };\n        case WS_GET_MESSAGE:\n            return {\n                ...state,\n                error: undefined,\n                ordersInfo: action.payload\n            };\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from 'redux';\nimport { allIngredientReducer } from '../services/AllIngridients/reducers';\nimport { ingredientDetailsReducer } from './IngredientDetails/reducers';\nimport { orderReducer } from './Order/reducers';\nimport { selectedIngredientsReducer } from './ContructorIngridients/reducers';\nimport { auth } from './Auth/reducers';\nimport { websocketReducer } from './Websocket/reducer';\n\nexport const rootReducer = combineReducers({\n    ingredients: allIngredientReducer,\n    ingredientDetails: ingredientDetailsReducer,\n    order: orderReducer,\n    selectedIngredients: selectedIngredientsReducer,\n    auth: auth,\n    websocket: websocketReducer,\n});\n","import {\n    WS_CONNECTION_SUCCESS,\n    WS_CONNECTION_ERROR,\n    WS_CONNECTION_CLOSED,\n    WS_GET_MESSAGE,\n    WS_CONNECTION_START,\n    WS_CONNECTION_START_USER,\n    WS_SEND_MESSAGE\n} from './actions';\n\n\nexport type TWsActions = {\n    wsInit: typeof WS_CONNECTION_START,\n    wsInitUser: typeof WS_CONNECTION_START_USER,\n    wsSendMessage: typeof WS_SEND_MESSAGE,\n    onOpen: typeof WS_CONNECTION_SUCCESS,\n    onClose: typeof WS_CONNECTION_CLOSED,\n    onError: typeof WS_CONNECTION_ERROR,\n    onMessage: typeof WS_GET_MESSAGE\n};\n\nexport const WS_ACTIONS = {\n    wsInit: WS_CONNECTION_START,\n    wsInitUser: WS_CONNECTION_START_USER,\n    wsSendMessage: WS_SEND_MESSAGE,\n    onOpen: WS_CONNECTION_SUCCESS,\n    onClose: WS_CONNECTION_CLOSED,\n    onError: WS_CONNECTION_ERROR,\n    onMessage: WS_GET_MESSAGE\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from './rootReducer';\nimport { socketMiddleware } from './Websocket/socketMiddleware';\nimport { WS_URL } from '../constants';\nimport { WS_ACTIONS } from './Websocket/ws-types';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(\n    thunk, \n    socketMiddleware(WS_URL, WS_ACTIONS)\n  )\n);\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './components/App';\nimport store from './services/store';\nimport { \n  BrowserRouter as Router\n} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router basename=\"/react-burger\">\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ordersStatistic\":\"OrdersStatistic_ordersStatistic__1MOgH\",\"box\":\"OrdersStatistic_box__S_oWt\",\"work\":\"OrdersStatistic_work__3prOQ\",\"done\":\"OrdersStatistic_done__1ijTM\",\"info\":\"OrdersStatistic_info__2lrXL\",\"text\":\"OrdersStatistic_text__AypdD\",\"list\":\"OrdersStatistic_list__1XPRS\",\"number\":\"OrdersStatistic_number__15f7v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerConstructor\":\"BurgerConstructor_burgerConstructor__hZKS7\",\"tab\":\"BurgerConstructor_tab__1iRng\",\"emptyConstructor\":\"BurgerConstructor_emptyConstructor__3u-pZ\",\"ingridient\":\"BurgerConstructor_ingridient__1BpAt\",\"fixedPosition\":\"BurgerConstructor_fixedPosition__3l4vC\",\"orderResult\":\"BurgerConstructor_orderResult__3Stmf\",\"orderFooter\":\"BurgerConstructor_orderFooter__3uigB\",\"customScroll\":\"BurgerConstructor_customScroll__3OPCU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appHeader\":\"AppHeader_appHeader__1rCT3\",\"mainMenu\":\"AppHeader_mainMenu__3hN_2\",\"headerLink\":\"AppHeader_headerLink__3nU7n\",\"activeLink\":\"AppHeader_activeLink__1kLDf\",\"loginMenu\":\"AppHeader_loginMenu__3TIvg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Order_card__gN7vO\",\"info\":\"Order_info__1VSt8\",\"radius\":\"Order_radius__1h74Y\",\"blackout\":\"Order_blackout__2zYSd\",\"image\":\"Order_image__2_3hG\",\"images\":\"Order_images__2cbxi\",\"number\":\"Order_number__2trh8\",\"order\":\"Order_order__2tVAi\",\"price\":\"Order_price__2EvvG\",\"status\":\"Order_status__1rdzg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"profile_profileContainer__D7wdx\",\"left\":\"profile_left__3ggSM\",\"right\":\"profile_right__GT-me\",\"nav\":\"profile_nav__1ddV4\",\"text\":\"profile_text__14iPx\",\"link\":\"profile_link__1-1p8 text_type_main-default text_color_accent\",\"description\":\"profile_description__2Qw7N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerIngredients\":\"BurgerIngredients_burgerIngredients__3fw0m\",\"tab\":\"BurgerIngredients_tab__2RpA4\",\"cards\":\"BurgerIngredients_cards__Rj0hf\",\"customScroll\":\"BurgerIngredients_customScroll__2O9Jj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderDetails\":\"OrderDetails_orderDetails__5jJmw\",\"orderNumber\":\"OrderDetails_orderNumber__1Ut0Z\",\"image\":\"OrderDetails_image__EzKzg\",\"text\":\"OrderDetails_text__1AY8i\",\"success\":\"OrderDetails_success__dx-lY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientDetails\":\"IngredientDetails_ingredientDetails__N473m\",\"text\":\"IngredientDetails_text__3Cl-5\",\"kbzu\":\"IngredientDetails_kbzu__25omh\",\"ingredient\":\"IngredientDetails_ingredient__1hpoV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingridientCard\":\"IngridientCard_ingridientCard__1VTK-\",\"price\":\"IngridientCard_price__2BL_p\",\"counterOuter\":\"IngridientCard_counterOuter__GVi51\",\"counter\":\"IngridientCard_counter__27oEH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileDetailsForm\":\"ProfileDetails_profileDetailsForm__szrQi\",\"buttons\":\"ProfileDetails_buttons__MG1RZ\",\"link\":\"ProfileDetails_link__3XZjh text_type_main-default text_color_accent\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalHeader\":\"Modal_modalHeader__2ik2T\",\"modalCloseButton\":\"Modal_modalCloseButton__1yCm7\",\"modal\":\"Modal_modal__P3_V5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"login_loginForm__1OESp\",\"link\":\"login_link__2bcVJ text_type_main-default text_color_accent\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderList\":\"OrderList_orderList__eKfZ1\",\"link\":\"OrderList_link__3Lt-u text_type_main-default text_color_accent\",\"customScroll\":\"OrderList_customScroll__1bpMz\",\"cards\":\"OrderList_cards__3HSTt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorForm\":\"error-page_errorForm__3mvGk\",\"link\":\"error-page_link__M3dhf text_type_main-default text_color_accent\",\"image\":\"error-page_image__3OhOE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerForm\":\"register_registerForm__2e2Z6\",\"link\":\"register_link__2XLtm text_type_main-default text_color_accent\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotPasswordForm\":\"forgot-password_forgotPasswordForm__1g2u_\",\"link\":\"forgot-password_link__1xRFL text_type_main-default text_color_accent\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resetPasswordForm\":\"reset-password_resetPasswordForm__1PjbT\",\"link\":\"reset-password_link__2wk5C text_type_main-default text_color_accent\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"feed-page_container__2oOF7\",\"box\":\"feed-page_box__hWmYj\"};"],"sourceRoot":""}